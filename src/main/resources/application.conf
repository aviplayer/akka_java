akka {
  loglevel = DEBUG

  actor {
    provider = "cluster"
    serializers {
          jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
        }
    serialization-bindings {
      "com.andrew.akka.commands.FolderCollectionEvent" = jackson-json
      "com.andrew.akka.commands.FolderEvent" = jackson-json
      "com.andrew.akka.commands.FolderCollectionMessages" = jackson-json
      "com.andrew.akka.commands.FolderMessages$FolderData" = jackson-json
      "com.andrew.akka.commands.FolderCollectionMessages$FoldersDataWithCondition" =jackson-json
      "com.andrew.akka.commands.FolderMessages$ConditionNotMet" = jackson-json
      "com.andrew.akka.commands.FolderCollectionMessages$CreateFolder" = jackson-json
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "build/journal"
      auto-start-journals = ["akka.persistence.journal.leveldb"]
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "build/snapshot"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
    }
  }

  remote {
      artery {
        canonical.hostname = "127.0.0.1"
        canonical.port = 0
      }
    }

    cluster {
      seed-nodes = [
        "akka://ClusterSystem@127.0.0.1:25251"
      ]
    }
}
